- name: Wait netmaker api server to respond
  uri:
    url: https://api.{{ netmaker_base_domain }}/api/networks
    method: GET
    headers:
      Authorization: Bearer {{ netmaker_master_key }}
  register: _result
  until: _result.status == 200
  retries: 30
  delay: 10 # Every 10 seconds

- name: Add admin user
  uri:
    url: https://api.{{ netmaker_base_domain }}/api/users/{{ netmaker_admin_username }}
    method: POST
    headers:
      Content-Type: application/json
      Authorization: Bearer {{ netmaker_master_key }}
    body: "{{ lookup('template', 'createadminuser.json.j2') }}"
    body_format: json
    status_code: [200, 400]

- name: Add networks if don't exist
  uri:
    url: https://api.{{ netmaker_base_domain }}/api/networks
    method: POST
    headers:
      Content-Type: application/json
      Authorization: Bearer {{ netmaker_master_key }}
    body: "{{ lookup('template', 'createnetwork.json.j2') }}"
    body_format: json
    status_code: [200, 400]
  loop: "{{ netmaker_networks }}"
  loop_control:
    index_var: ipindex

- name: Get keys
  uri:
    url: https://api.{{ netmaker_base_domain }}/api/v1/enrollment-keys
    method: GET
    headers:
      Content-Type: application/json
      Authorization: Bearer {{ netmaker_master_key }}
    status_code: [200]
    return_content: true
  register: key_response

- name: Add key for control network for netclient
  uri:
    url: https://api.{{ netmaker_base_domain }}/api/v1/enrollment-keys
    method: POST
    headers:
      Content-Type: application/json
      Authorization: Bearer {{ netmaker_master_key }}
    body: "{{ lookup('template', 'createkey.json.j2') }}"
    body_format: json
    status_code: [200, 400]
  vars:
    keytag: "{{ item.0.network_name }}-{{ item.1 }}"
  when: "keytag not in key_response.content"
  loop: "{{ netmaker_networks | subelements('node_keys') }}"

- name: Get keys again
  uri:
    url: https://api.{{ netmaker_base_domain }}/api/v1/enrollment-keys
    method: GET
    headers:
      Content-Type: application/json
      Authorization: Bearer {{ netmaker_master_key }}
    status_code: [200]
    return_content: true
  register: key_response2

- name: copy keys
  copy: 
    content: "{{ key_response2.content }}"
    dest: "{{ netmaker_enrollment_key_list_file_location }}"
  delegate_to: localhost

# - name: Save access token for bastion netclient
#   vars:
#     query: "[?tags[0]=='{{ netmaker_control_network_name }}-access'].token"
#   set_fact:
#     netmaker_control_network_access_string: "{{ key_response2.json | json_query(query) | first }}"